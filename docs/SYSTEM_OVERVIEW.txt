## System Overview: Blockchain-Based Land Registry

This system implements a decentralized Land Registry application on a blockchain. Its primary purpose is to provide a secure, transparent, and immutable record of land ownership and transactions.

The application allows different authorized users to interact with the registry based on their assigned roles, enabling functionalities like registering new lands, verifying land details, managing land ownership and transfers (through shares), and viewing historical records.

The use of blockchain technology ensures that once land and transaction data are recorded, they cannot be tampered with, providing a high level of trust and security in the land registration and transfer process.

### Core Functionalities:

1.  **Land Registration:** Allows authorized entities (Registrars) to submit new land parcels to the registry with details like location, area, and initial price per share.
2.  **Land Verification:** Enables designated Verifiers to review and approve registered land parcels, adding a layer of validation to the process.
3.  **Share Management:** Facilitates the purchase and transfer of land ownership represented as shares.
4.  **Role Management:** Provides administrative control (Government) to assign and revoke specific roles (Registrar, Verifier, Client) to user addresses.
5.  **History Tracking:** Allows users to view the complete ownership and transfer history for any registered land parcel.
6.  **Analytics:** Provides the Government role with insights into platform metrics like total lands registered, shares sold, and fees collected.

### User Roles:

The system defines distinct roles with specific permissions and dashboard views:

*   **Government:** Has administrative control, including role management and fee withdrawal. Can view all registered lands.
*   **Registrar:** Authorized to register new land parcels. Can view lands they have registered.
*   **Verifier:** Authorized to verify unverified land parcels. Can view unverified lands and lands they have verified.
*   **Client:** General users who can view available (verified) lands, purchase shares, view their owned shares, and transfer shares. Can also view the history of any land.

### System Architecture (High-Level):

The system follows a client-server architecture where the frontend web application (client) interacts with a smart contract deployed on a blockchain network (server). User interactions on the frontend trigger transactions or read calls to the smart contract via a Web3 library (like Ethers.js) and a browser-based wallet (like MetaMask). The smart contract enforces the rules and logic of the land registry and stores the immutable data on the blockchain.

### Key Components (High-Level):

*   **Smart Contract:** The core logic and data storage on the blockchain.
*   **Frontend Application:** The web interface for user interaction.
*   **Web3 Library (Ethers.js):** Facilitates communication between the frontend and the smart contract.
*   **Wallet (MetaMask):** Manages user accounts and signs blockchain transactions.

This overview provides a foundational understanding of the Land Registry system's purpose, capabilities, and the roles involved. 